{"version":3,"sources":["component/Button.js","component/ButtonPanel.js","component/Display.js","logic/operate.js","logic/isNumber.js","logic/calculate.js","component/App.js","index.js"],"names":["Button","handleClick","props","clickHandler","name","onClick","this","React","Component","ButtonPanel","buttonName","className","Display","value","calculate","numberOne","numberTwo","operation","one","Big","two","plus","toString","minus","times","alert","div","Error","isNumber","item","test","obj","total","next","includes","operate","App","state","setState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f373bf8.chunk.js","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\nimport './Button.css';\r\n\r\nclass Button extends React.Component\r\n{\r\n    static propTypes = {\r\n        name: propTypes.string,\r\n        clickHandler: propTypes.func\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.props.clickHandler(this.props.name);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.handleClick}>{this.props.name}</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport Button from './Button';\r\n\r\nimport \"./ButtonPanel.css\";\r\n\r\nclass ButtonPanel extends React.Component\r\n{\r\n    static propTypes = {\r\n        clickHandler: propTypes.func,\r\n      };\r\n\r\n    handleClick = buttonName => {\r\n        this.props.clickHandler(buttonName);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n        <div>\r\n            <div className='clear'>\r\n                <Button name='C' clickHandler={this.handleClick} />\r\n            </div>\r\n\r\n\r\n        <div className=\"panel\">\r\n            <div>\r\n                <Button name='7' clickHandler={this.handleClick} />\r\n            </div>\r\n            <div>   \r\n                <Button name='8' clickHandler={this.handleClick} />\r\n            </div>\r\n            <div>\r\n                <Button name='9' clickHandler={this.handleClick} />\r\n            </div>\r\n            <div>\r\n                <Button name='รท' clickHandler={this.handleClick} />\r\n            </div>            \r\n            <div>\r\n                <Button name='4' clickHandler={this.handleClick} />\r\n            <div>\r\n            </div> \r\n                <Button name='5' clickHandler={this.handleClick} />\r\n            <div>\r\n            </div> \r\n                <Button name='6' clickHandler={this.handleClick} />\r\n            <div>\r\n            </div> \r\n                <Button name='x' clickHandler={this.handleClick} />\r\n            </div>\r\n            <div>\r\n                <Button name='1' clickHandler={this.handleClick} />\r\n            </div>\r\n            <div>\r\n                <Button name='2' clickHandler={this.handleClick} />\r\n            </div>\r\n            <div>\r\n                <Button name='3' clickHandler={this.handleClick} />\r\n            </div>\r\n            <div>\r\n                <Button name='+' clickHandler={this.handleClick} />\r\n            </div>\r\n            <div>\r\n                <Button name='0' clickHandler={this.handleClick} />\r\n            </div>\r\n            <div>\r\n                <Button name='.' clickHandler={this.handleClick} />\r\n            </div>\r\n            <div>\r\n                <Button name='=' clickHandler={this.handleClick} />\r\n            </div>\r\n            <div>\r\n                <Button name='-' clickHandler={this.handleClick} />\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ButtonPanel;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport './Display.css';\r\n\r\nclass Display extends React.Component\r\n{\r\n    static propTypes = {\r\n        value: PropTypes.string\r\n    };\r\n\r\nrender() {\r\n    return (\r\n        <div className='display'>\r\n            <div>{this.props.value}</div>\r\n        </div>\r\n    );\r\n    }\r\n\r\n}\r\n\r\nexport default Display;","import Big from 'big.js';\r\n\r\nfunction calculate(numberOne, numberTwo, operation){\r\n    const one = Big(numberOne || '0');\r\n    const two = Big(numberTwo || (operation === \"รท\" || operation === 'x' ? \"1\": \"0\"));\r\n    if (operation === \"+\") {\r\n        return one.plus(two).toString();\r\n      }\r\n      if (operation === \"-\") {\r\n        return one.minus(two).toString();\r\n      }\r\n      if (operation === \"x\") {\r\n        return one.times(two).toString();\r\n      }\r\n      if (operation === \"รท\") {\r\n        if (two === \"0\") {\r\n          alert(\"Divide by 0 error\");\r\n          return \"0\";\r\n        } else {\r\n          return one.div(two).toString();\r\n        }\r\n      }\r\n      throw Error(`Unknown operation '${operation}'`);\r\n}\r\n\r\nexport default calculate;","function isNumber(item) {\r\n    return /[0-9]+/.test(item);\r\n  }\r\n\r\nexport default isNumber;","import Big from 'big.js';\r\nimport operate from './operate';\r\nimport isNumber from './isNumber';\r\n\r\nfunction calculate(obj, buttonName) {\r\n    if (buttonName === \"C\") {\r\n        return {\r\n          total: null,\r\n          next: null,\r\n          operation: null,\r\n        };\r\n      }\r\n\r\n    if (isNumber(buttonName)) {\r\n        if (buttonName === \"0\" && obj.next === \"0\") {\r\n          return {};\r\n        }\r\n        // If there is an operation, update next\r\n        if (obj.operation) {\r\n          if (obj.next) {\r\n            return { next: obj.next + buttonName };\r\n          }\r\n          return { next: buttonName };\r\n        }\r\n        // If there is no operation, update next and clear the value\r\n        if (obj.next) {\r\n          const next = obj.next === \"0\" ? buttonName : obj.next + buttonName;\r\n          return {\r\n            next,\r\n            total: null,\r\n          };\r\n        }\r\n        return {\r\n          next: buttonName,\r\n          total: null,\r\n        };\r\n      }\r\n\r\n      if (buttonName === \".\") {\r\n        if (obj.next) {\r\n          // ignore a . if the next number already has one\r\n          if (obj.next.includes(\".\")) {\r\n            return {};\r\n          }\r\n          return { next: obj.next + \".\" };\r\n        }\r\n        return { next: \"0.\" };\r\n      }\r\n\r\n      if (buttonName === \"=\") {\r\n        if (obj.next && obj.operation) {\r\n          return {\r\n            total: operate(obj.total, obj.next, obj.operation),\r\n            next: null,\r\n            operation: null,\r\n          };\r\n        } else {\r\n          // '=' with no operation, nothing to do\r\n          return {};\r\n        }\r\n      }\r\n\r\n      if (obj.operation) {\r\n        return {\r\n          total: operate(obj.total, obj.next, obj.operation),\r\n          next: null,\r\n          operation: buttonName,\r\n        };\r\n      }\r\n\r\n      if (!obj.next) {\r\n        return { operation: buttonName };\r\n      }\r\n      \r\n      return {\r\n        total: obj.next,\r\n        next: null,\r\n        operation: buttonName,\r\n      };\r\n}\r\n\r\nexport default calculate;","import React from 'react';\nimport ButtonPanel from './ButtonPanel';\nimport Display from './Display';\nimport calculate from '../logic/calculate';\n\nimport './App.css';\n\n\nclass App extends React.Component \n{\n  state = {\n    total: null,\n    next: null,\n    operation: null\n  };\n  \n  handleClick = buttonName => {\n    this.setState(calculate(this.state, buttonName));\n  }\n\n  render() {\n    return (\n      <div>\n        <Display value={this.state.next || this.state.total || \"0\"} />\n        <ButtonPanel clickHandler={this.handleClick} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './component/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}